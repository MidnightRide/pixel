!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/media/terabyte/development/pixel/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
%.o	Makefile	/^%.o: %.c$/;"	t
.PHONY	Makefile	/^.PHONY = all clean$/;"	m
0	.vscode/tasks.json	/^                "$gcc"$/;"	s	array:tasks.0.problemMatcher
0	.vscode/tasks.json	/^                "-fdiagnostics-color=always",$/;"	s	array:tasks.0.args
0	.vscode/tasks.json	/^        {$/;"	o	array:tasks
1	.vscode/tasks.json	/^                "-g",$/;"	s	array:tasks.0.args
2	.vscode/tasks.json	/^                "${file}",$/;"	s	array:tasks.0.args
3	.vscode/tasks.json	/^                "-o",$/;"	s	array:tasks.0.args
4	.vscode/tasks.json	/^                "${fileDirname}\/${fileBasenameNoExtension}"$/;"	s	array:tasks.0.args
AABB	src/util/aabb.h	/^typedef vec3s AABB[2];$/;"	t	typeref:typename:vec3s[2]
AABB_H	src/util/aabb.h	/^#define AABB_H$/;"	d
ASSERT	src/defines.h	/^#define ASSERT(/;"	d
BIN	Makefile	/^BIN  = bin$/;"	m
Button	src/gfx/window.h	/^typedef struct Button {$/;"	s
Button	src/gfx/window.h	/^} Button;$/;"	t	typeref:struct:Button
CAMERA_H	src/util/camera.h	/^#define CAMERA_H$/;"	d
CAMERA_STACK_MAX	src/gfx/renderer.h	/^#define CAMERA_STACK_MAX /;"	d
CC	Makefile	/^CC      = clang$/;"	m
CFLAGS	Makefile	/^CFLAGS  = -std=c11 -O0 -g$/;"	m
COLOR_H	src/util/color.h	/^#define COLOR_H$/;"	d
CameraType	src/util/camera.h	/^typedef enum CameraType$/;"	g
CameraType	src/util/camera.h	/^} CameraType;$/;"	t	typeref:enum:CameraType
CameraType_MAX	src/util/camera.h	/^    CameraType_perspective, CameraType_ortho, CameraType_MAX$/;"	e	enum:CameraType
CameraType_ortho	src/util/camera.h	/^    CameraType_perspective, CameraType_ortho, CameraType_MAX$/;"	e	enum:CameraType
CameraType_perspective	src/util/camera.h	/^    CameraType_perspective, CameraType_ortho, CameraType_MAX$/;"	e	enum:CameraType
F32_EPSILON	src/util/fmath.h	/^#define F32_EPSILON /;"	d
F64_EPSILON	src/util/fmath.h	/^#define F64_EPSILON /;"	d
FALSE	src/defines.h	/^#define FALSE /;"	d
FMATH_H	src/util/fmath.h	/^#define FMATH_H$/;"	d
FWindow	src/gfx/window.h	/^typedef void (*FWindow)();$/;"	t	typeref:typename:void (*)()
FillMode	src/gfx/renderer.h	/^typedef enum FillMode {$/;"	g
FillMode	src/gfx/renderer.h	/^} FillMode;$/;"	t	typeref:enum:FillMode
FillMode_fill	src/gfx/renderer.h	/^    FillMode_fill, FillMode_line,$/;"	e	enum:FillMode
FillMode_line	src/gfx/renderer.h	/^    FillMode_fill, FillMode_line,$/;"	e	enum:FillMode
GFX_H	src/gfx/gfx.h	/^#define GFX_H$/;"	d
GLFW_INCLUDE_NONE	src/gfx/gfx.h	/^#define GLFW_INCLUDE_NONE$/;"	d
GLMS_IVEC2_ONE	src/util/ivec2s.h	/^#define GLMS_IVEC2_ONE /;"	d
GLMS_IVEC2_ONE_INIT	src/util/ivec2s.h	/^#define GLMS_IVEC2_ONE_INIT /;"	d
GLMS_IVEC2_ZERO	src/util/ivec2s.h	/^#define GLMS_IVEC2_ZERO /;"	d
GLMS_IVEC2_ZERO_INIT	src/util/ivec2s.h	/^#define GLMS_IVEC2_ZERO_INIT /;"	d
GLMS_IVEC3S_XUP	src/util/ivec3s.h	/^#define GLMS_IVEC3S_XUP /;"	d
GLMS_IVEC3S_YUP	src/util/ivec3s.h	/^#define GLMS_IVEC3S_YUP /;"	d
GLMS_IVEC3S_ZUP	src/util/ivec3s.h	/^#define GLMS_IVEC3S_ZUP /;"	d
GLMS_IVEC3_ONE	src/util/ivec3s.h	/^#define GLMS_IVEC3_ONE /;"	d
GLMS_IVEC3_ONE_INIT	src/util/ivec3s.h	/^#define GLMS_IVEC3_ONE_INIT /;"	d
GLMS_IVEC3_ZERO	src/util/ivec3s.h	/^#define GLMS_IVEC3_ZERO /;"	d
GLMS_IVEC3_ZERO_INIT	src/util/ivec3s.h	/^#define GLMS_IVEC3_ZERO_INIT /;"	d
GLM_IVEC2_ONE	src/util/ivec2.h	/^#define GLM_IVEC2_ONE /;"	d
GLM_IVEC2_ONE_INIT	src/util/ivec2.h	/^#define GLM_IVEC2_ONE_INIT /;"	d
GLM_IVEC2_ZERO	src/util/ivec2.h	/^#define GLM_IVEC2_ZERO /;"	d
GLM_IVEC2_ZERO_INIT	src/util/ivec2.h	/^#define GLM_IVEC2_ZERO_INIT /;"	d
GLM_IVEC3_FORWARD	src/util/ivec3.h	/^#define GLM_IVEC3_FORWARD /;"	d
GLM_IVEC3_ONE	src/util/ivec3.h	/^#define GLM_IVEC3_ONE /;"	d
GLM_IVEC3_ONE_INIT	src/util/ivec3.h	/^#define GLM_IVEC3_ONE_INIT /;"	d
GLM_IVEC3_XUP	src/util/ivec3.h	/^#define GLM_IVEC3_XUP /;"	d
GLM_IVEC3_XXX	src/util/ivec3.h	/^#define GLM_IVEC3_XXX /;"	d
GLM_IVEC3_YUP	src/util/ivec3.h	/^#define GLM_IVEC3_YUP /;"	d
GLM_IVEC3_YYY	src/util/ivec3.h	/^#define GLM_IVEC3_YYY /;"	d
GLM_IVEC3_ZERO	src/util/ivec3.h	/^#define GLM_IVEC3_ZERO /;"	d
GLM_IVEC3_ZERO_INIT	src/util/ivec3.h	/^#define GLM_IVEC3_ZERO_INIT /;"	d
GLM_IVEC3_ZUP	src/util/ivec3.h	/^#define GLM_IVEC3_ZUP /;"	d
GLM_IVEC3_ZYX	src/util/ivec3.h	/^#define GLM_IVEC3_ZYX /;"	d
GLM_IVEC3_ZZZ	src/util/ivec3.h	/^#define GLM_IVEC3_ZZZ /;"	d
IVEC2S23	src/util/fmath.h	/^#define IVEC2S23(/;"	d
IVEC2S2V	src/util/fmath.h	/^#define IVEC2S2V(/;"	d
IVEC3S2V	src/util/fmath.h	/^#define IVEC3S2V(/;"	d
Keyboard	src/gfx/window.h	/^typedef struct Keyboard {$/;"	s
Keyboard	src/gfx/window.h	/^} Keyboard;$/;"	t	typeref:struct:Keyboard
LDFLAGS	Makefile	/^LDFLAGS = \/media\/terabyte\/lib\/glad\/src\/glad.o \/media\/terabyte\/lib\/glfw\/src\/libglfw3./;"	m
Mouse	src/gfx/window.h	/^typedef struct Mouse {$/;"	s
Mouse	src/gfx/window.h	/^} Mouse;$/;"	t	typeref:struct:Mouse
NOW	src/util/time.h	/^#define NOW(/;"	d
NS_PER_MS	src/util/time.h	/^#define NS_PER_MS /;"	d
NS_PER_SECOND	src/util/time.h	/^#define NS_PER_SECOND /;"	d
OBJ	Makefile	/^OBJ  = $(SRC:.c=.o)$/;"	m
OrthoCamera	src/util/camera.h	/^typedef struct OrthoCamera$/;"	s
OrthoCamera	src/util/camera.h	/^} OrthoCamera;$/;"	t	typeref:struct:OrthoCamera
PACKED	src/util/util.h	/^#define PACKED /;"	d
PI	src/util/fmath.h	/^#define PI /;"	d
PI_2	src/util/fmath.h	/^#define PI_2 /;"	d
PerspectiveCamera	src/util/camera.h	/^typedef struct PerspectiveCamera$/;"	s
PerspectiveCamera	src/util/camera.h	/^} PerspectiveCamera;$/;"	t	typeref:struct:PerspectiveCamera
RENDERER_H	src/gfx/renderer.h	/^#define RENDERER_H$/;"	d
RENDER_HEIGHT	src/defines.h	/^#define RENDER_HEIGHT /;"	d
RENDER_WIDTH	src/defines.h	/^#define RENDER_WIDTH /;"	d
RGBAX2F	src/util/color.h	/^#define RGBAX2F(/;"	d
RenderPass	src/gfx/renderer.h	/^typedef enum RenderPass {$/;"	g
RenderPass	src/gfx/renderer.h	/^} RenderPass;$/;"	t	typeref:enum:RenderPass
RenderPass_2d	src/gfx/renderer.h	/^    RenderPass_2d,$/;"	e	enum:RenderPass
RenderPass_3d	src/gfx/renderer.h	/^    RenderPass_3d$/;"	e	enum:RenderPass
Renderer	src/gfx/renderer.h	/^typedef struct Renderer {$/;"	s
Renderer	src/gfx/renderer.h	/^} Renderer;$/;"	t	typeref:struct:Renderer
SCREEN_HEIGHT	src/defines.h	/^#define SCREEN_HEIGHT /;"	d
SCREEN_WIDTH	src/defines.h	/^#define SCREEN_WIDTH /;"	d
SHADER_H	src/gfx/shader.h	/^#define SHADER_H$/;"	d
SRC	Makefile	/^SRC  = $(wildcard src\/**\/*.c) $(wildcard src\/*.c) $(wildcard src\/**\/**\/*.c) $(wildcard src/;"	m
STB_IMAGE_IMPLEMENTATION	src/gfx/texture.c	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
Shader	src/gfx/shader.h	/^typedef struct Shader {$/;"	s
Shader	src/gfx/shader.h	/^} Shader;$/;"	t	typeref:struct:Shader
ShaderType	src/gfx/renderer.h	/^typedef enum ShaderType {$/;"	g
ShaderType	src/gfx/renderer.h	/^} ShaderType;$/;"	t	typeref:enum:ShaderType
ShaderType_MAX	src/gfx/renderer.h	/^    ShaderType_MAX,$/;"	e	enum:ShaderType
ShaderType_basic_color	src/gfx/renderer.h	/^    ShaderType_basic_color,$/;"	e	enum:ShaderType
ShaderType_basic_texture	src/gfx/renderer.h	/^    ShaderType_basic_texture,$/;"	e	enum:ShaderType
ShaderType_chunk	src/gfx/renderer.h	/^    ShaderType_chunk,$/;"	e	enum:ShaderType
ShaderType_none	src/gfx/renderer.h	/^    ShaderType_none = 0,$/;"	e	enum:ShaderType
ShaderType_sky	src/gfx/renderer.h	/^    ShaderType_sky,$/;"	e	enum:ShaderType
State	src/state.h	/^typedef struct State {$/;"	s
State	src/state.h	/^} State;$/;"	t	typeref:struct:State
TAU	src/util/fmath.h	/^#define TAU /;"	d
TEXTURE_H	src/gfx/texture.h	/^#define TEXTURE_H$/;"	d
TICKRATE	src/util/util.h	/^#define TICKRATE /;"	d
TIME_H	src/util/time.h	/^#define TIME_H$/;"	d
TRUE	src/defines.h	/^#define TRUE /;"	d
Texture	src/gfx/texture.h	/^typedef struct Texture {$/;"	s
Texture	src/gfx/texture.h	/^} Texture;$/;"	t	typeref:struct:Texture
Texture_MAX	src/gfx/renderer.h	/^    Texture_MAX$/;"	e	enum:Textures
Textures	src/gfx/renderer.h	/^typedef enum Textures {$/;"	g
Textures	src/gfx/renderer.h	/^} Textures;$/;"	t	typeref:enum:Textures
UNAME_S	Makefile	/^UNAME_S = $(shell uname -s)$/;"	m
UTIL_H	src/util/util.h	/^#define UTIL_H$/;"	d
VAO	src/gfx/vao.h	/^typedef struct VAO {$/;"	s
VAO	src/gfx/vao.h	/^} VAO;$/;"	t	typeref:struct:VAO
VAO_H	src/gfx/vao.h	/^#define VAO_H$/;"	d
VBO	src/gfx/vbo.h	/^typedef struct VBO {$/;"	s
VBO	src/gfx/vbo.h	/^} VBO;$/;"	t	typeref:struct:VBO
VBO_H	src/gfx/vbo.h	/^#define VBO_H$/;"	d
VEC2S2I	src/util/fmath.h	/^#define VEC2S2I(/;"	d
VEC3S2I	src/util/fmath.h	/^#define VEC3S2I(/;"	d
VertexAttr	src/gfx/shader.h	/^typedef struct VertexAttr {$/;"	s
VertexAttr	src/gfx/shader.h	/^} VertexAttr;$/;"	t	typeref:struct:VertexAttr
ViewProj	src/util/camera.h	/^typedef struct ViewProj$/;"	s
ViewProj	src/util/camera.h	/^} ViewProj;$/;"	t	typeref:struct:ViewProj
WINDOW_H	src/gfx/window.h	/^#define WINDOW_H$/;"	d
Window	src/gfx/window.h	/^typedef struct Window {$/;"	s
Window	src/gfx/window.h	/^} Window;$/;"	t	typeref:struct:Window
__anon9acfc83d0108	src/gfx/renderer.h	/^    struct {$/;"	s	struct:Renderer
__anon9acfc83d0208	src/gfx/renderer.h	/^    struct {$/;"	s	struct:Renderer
_compile	src/gfx/shader.c	/^static GLint _compile(char *path, GLenum type) {$/;"	f	typeref:typename:GLint	file:
_cursor_callback	src/gfx/window.c	/^static void _cursor_callback(GLFWwindow *handle, double xp, double yp) {$/;"	f	typeref:typename:void	file:
_destroy	src/gfx/window.c	/^static void _destroy() {$/;"	f	typeref:typename:void	file:
_error_callback	src/gfx/window.c	/^static void _error_callback(int code, const char *description) {$/;"	f	typeref:typename:void	file:
_init	src/gfx/window.c	/^static void _init() { window.init(); }$/;"	f	typeref:typename:void	file:
_key_callback	src/gfx/window.c	/^static void _key_callback(GLFWwindow *handle, int key, int scancode, int action,$/;"	f	typeref:typename:void	file:
_log_and_fail	src/gfx/shader.c	/^static void _log_and_fail($/;"	f	typeref:typename:void	file:
_mouse_callback	src/gfx/window.c	/^static void _mouse_callback(GLFWwindow *handle, int button, int action,$/;"	f	typeref:typename:void	file:
_render	src/gfx/window.c	/^static void _render() {$/;"	f	typeref:typename:void	file:
_size_callback	src/gfx/window.c	/^static void _size_callback(GLFWwindow *handle, int width, int height) {$/;"	f	typeref:typename:void	file:
_tick	src/gfx/window.c	/^static void _tick() {$/;"	f	typeref:typename:void	file:
_update	src/gfx/window.c	/^static void _update() {$/;"	f	typeref:typename:void	file:
all	Makefile	/^all: dirs game$/;"	t
args	.vscode/tasks.json	/^            "args": [$/;"	a	object:tasks.0
array	src/gfx/renderer.h	/^        enum CameraType array[CAMERA_STACK_MAX];$/;"	m	struct:Renderer::__anon9acfc83d0108	typeref:enum:CameraType[]
aspect	src/util/camera.h	/^    f32 pitch, yaw, fov, aspect, znear, zfar;$/;"	m	struct:PerspectiveCamera	typeref:typename:f32
b8	src/defines.h	/^typedef uint8_t b8;$/;"	t	typeref:typename:uint8_t
button_array_tick	src/gfx/window.c	/^static void button_array_tick(size_t n, Button *buttons) {$/;"	f	typeref:typename:void	file:
button_array_update	src/gfx/window.c	/^static void button_array_update(size_t n, Button *buttons) {$/;"	f	typeref:typename:void	file:
buttons	src/gfx/window.h	/^    Button buttons[GLFW_MOUSE_BUTTON_LAST];$/;"	m	struct:Mouse	typeref:typename:Button[]
camera_stack	src/gfx/renderer.h	/^    } camera_stack;$/;"	m	struct:Renderer	typeref:struct:Renderer::__anon9acfc83d0108
camera_type	src/gfx/renderer.h	/^    enum CameraType camera_type;$/;"	m	struct:Renderer	typeref:enum:CameraType
cglm_ivec2_h	src/util/ivec2.h	/^#define cglm_ivec2_h$/;"	d
cglm_ivec3_h	src/util/ivec3.h	/^#define cglm_ivec3_h$/;"	d
cglms_ivec2s_h	src/util/ivec2s.h	/^#define cglms_ivec2s_h$/;"	d
cglms_ivec3s_h	src/util/ivec3s.h	/^#define cglms_ivec3s_h$/;"	d
clamp	src/util/fmath.h	/^#define clamp(/;"	d
clean	Makefile	/^clean:$/;"	t
clear_color	src/gfx/renderer.h	/^    vec4s clear_color;$/;"	m	struct:Renderer	typeref:typename:vec4s
command	.vscode/tasks.json	/^            "command": "\/usr\/bin\/clang",$/;"	s	object:tasks.0
cosf	src/util/fmath.h	/^#define cosf(/;"	d
current_shader	src/gfx/renderer.h	/^    ShaderType current_shader;$/;"	m	struct:Renderer	typeref:typename:ShaderType
cwd	.vscode/tasks.json	/^                "cwd": "${fileDirname}"$/;"	s	object:tasks.0.options
degrees	src/util/fmath.h	/^#define degrees(/;"	d
delta	src/gfx/window.h	/^    vec2s position, delta;$/;"	m	struct:Mouse	typeref:typename:vec2s
destroy	src/gfx/window.h	/^    FWindow init, destroy, tick, update, render;$/;"	m	struct:Window	typeref:typename:FWindow
destroy	src/main.c	/^void destroy() { renderer_destroy(&state.renderer); }$/;"	f	typeref:typename:void
detail	.vscode/tasks.json	/^            "detail": "Task generated by Debugger."$/;"	s	object:tasks.0
direction	src/util/camera.h	/^    vec3s position, direction, up, right;$/;"	m	struct:PerspectiveCamera	typeref:typename:vec3s
dirs	Makefile	/^dirs:$/;"	t
down	src/gfx/window.h	/^    bool down, last, last_tick, pressed, pressed_tick;$/;"	m	struct:Button	typeref:typename:bool
dynamic	src/gfx/vbo.h	/^    bool dynamic;$/;"	m	struct:VBO	typeref:typename:bool
f32	src/defines.h	/^typedef float f32;$/;"	t	typeref:typename:float
f64	src/defines.h	/^typedef double f64;$/;"	t	typeref:typename:double
flags	src/gfx/renderer.h	/^    } flags;$/;"	m	struct:Renderer	typeref:struct:Renderer::__anon9acfc83d0208
floori	src/util/fmath.h	/^#define floori(/;"	d
fov	src/util/camera.h	/^    f32 pitch, yaw, fov, aspect, znear, zfar;$/;"	m	struct:PerspectiveCamera	typeref:typename:f32
fps	src/gfx/window.h	/^    u64 frames, fps, last_frame, frame_delta;$/;"	m	struct:Window	typeref:typename:u64
frame_delta	src/gfx/window.h	/^    u64 frames, fps, last_frame, frame_delta;$/;"	m	struct:Window	typeref:typename:u64
frames	src/gfx/window.h	/^    u64 frames, fps, last_frame, frame_delta;$/;"	m	struct:Window	typeref:typename:u64
fs_handle	src/gfx/shader.h	/^    GLuint handle, vs_handle, fs_handle;$/;"	m	struct:Shader	typeref:typename:GLuint
game	Makefile	/^game: $(OBJ)$/;"	t
glm_ivec2	src/util/ivec2.h	/^glm_ivec2(int * __restrict v, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_add	src/util/ivec2.h	/^glm_ivec2_add(ivec2 a, ivec2 b, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_adds	src/util/ivec2.h	/^glm_ivec2_adds(ivec2 v, int s, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_copy	src/util/ivec2.h	/^glm_ivec2_copy(ivec2 a, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_cross	src/util/ivec2.h	/^glm_ivec2_cross(ivec2 a, ivec2 b) {$/;"	f	typeref:typename:CGLM_INLINE int
glm_ivec2_div	src/util/ivec2.h	/^glm_ivec2_div(ivec2 a, ivec2 b, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_divs	src/util/ivec2.h	/^glm_ivec2_divs(ivec2 v, int s, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_dot	src/util/ivec2.h	/^glm_ivec2_dot(ivec2 a, ivec2 b) {$/;"	f	typeref:typename:CGLM_INLINE int
glm_ivec2_mod	src/util/ivec2.h	/^glm_ivec2_mod(ivec2 a, ivec2 b, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_mul	src/util/ivec2.h	/^glm_ivec2_mul(ivec2 a, ivec2 b, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_one	src/util/ivec2.h	/^glm_ivec2_one(ivec2 v) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_print	src/util/ivec2.h	/^glm_ivec2_print(ivec2            vec,$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_scale	src/util/ivec2.h	/^glm_ivec2_scale(ivec2 v, int s, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_sub	src/util/ivec2.h	/^glm_ivec2_sub(ivec2 a, ivec2 b, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_subs	src/util/ivec2.h	/^glm_ivec2_subs(ivec2 v, int s, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_zero	src/util/ivec2.h	/^glm_ivec2_zero(ivec2 v) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3	src/util/ivec3.h	/^glm_ivec3(vec4 v4, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_add	src/util/ivec3.h	/^glm_ivec3_add(ivec3 a, ivec3 b, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_adds	src/util/ivec3.h	/^glm_ivec3_adds(ivec3 v, int s, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_copy	src/util/ivec3.h	/^glm_ivec3_copy(ivec3 a, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_div	src/util/ivec3.h	/^glm_ivec3_div(ivec3 a, ivec3 b, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_divs	src/util/ivec3.h	/^glm_ivec3_divs(ivec3 v, int s, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_dot	src/util/ivec3.h	/^glm_ivec3_dot(ivec3 a, ivec3 b) {$/;"	f	typeref:typename:CGLM_INLINE int
glm_ivec3_dup	src/util/ivec3.h	/^#define glm_ivec3_dup(/;"	d
glm_ivec3_flipsign	src/util/ivec3.h	/^#define glm_ivec3_flipsign(/;"	d
glm_ivec3_flipsign_to	src/util/ivec3.h	/^#define glm_ivec3_flipsign_to(/;"	d
glm_ivec3_inv	src/util/ivec3.h	/^#define glm_ivec3_inv(/;"	d
glm_ivec3_inv_to	src/util/ivec3.h	/^#define glm_ivec3_inv_to(/;"	d
glm_ivec3_mod	src/util/ivec3.h	/^glm_ivec3_mod(ivec3 a, ivec3 b, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_mul	src/util/ivec3.h	/^glm_ivec3_mul(ivec3 a, ivec3 b, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_mulv	src/util/ivec3.h	/^#define glm_ivec3_mulv(/;"	d
glm_ivec3_norm	src/util/ivec3.h	/^glm_ivec3_norm(ivec3 v) {$/;"	f	typeref:typename:CGLM_INLINE int
glm_ivec3_norm2	src/util/ivec3.h	/^glm_ivec3_norm2(ivec3 v) {$/;"	f	typeref:typename:CGLM_INLINE int
glm_ivec3_one	src/util/ivec3.h	/^glm_ivec3_one(ivec3 v) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_scale	src/util/ivec3.h	/^glm_ivec3_scale(ivec3 v, int s, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_sub	src/util/ivec3.h	/^glm_ivec3_sub(ivec3 a, ivec3 b, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_subs	src/util/ivec3.h	/^glm_ivec3_subs(ivec3 v, int s, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_zero	src/util/ivec3.h	/^glm_ivec3_zero(ivec3 v) {$/;"	f	typeref:typename:CGLM_INLINE void
glms_aabb_scale	src/util/aabb.h	/^static inline void glms_aabb_scale(AABB box, vec3s scale, AABB dest)$/;"	f	typeref:typename:void
glms_ivec2_add	src/util/ivec2s.h	/^glms_ivec2_add(ivec2s a, ivec2s b) {$/;"	f	typeref:typename:CGLM_INLINE ivec2s
glms_ivec2_adds	src/util/ivec2s.h	/^glms_ivec2_adds(ivec2s a, int s) {$/;"	f	typeref:typename:CGLM_INLINE ivec2s
glms_ivec2_mul	src/util/ivec2s.h	/^glms_ivec2_mul(ivec2s a, ivec2s b) {$/;"	f	typeref:typename:CGLM_INLINE ivec2s
glms_ivec2_one	src/util/ivec2s.h	/^glms_ivec2_one(void) {$/;"	f	typeref:typename:CGLM_INLINE ivec2s
glms_ivec2_pack	src/util/ivec2s.h	/^glms_ivec2_pack(ivec2s dst[], ivec2 src[], size_t len) {$/;"	f	typeref:typename:CGLM_INLINE void
glms_ivec2_scale	src/util/ivec2s.h	/^glms_ivec2_scale(ivec2s v, int s) {$/;"	f	typeref:typename:CGLM_INLINE ivec2s
glms_ivec2_sub	src/util/ivec2s.h	/^glms_ivec2_sub(ivec2s a, ivec2s b) {$/;"	f	typeref:typename:CGLM_INLINE ivec2s
glms_ivec2_subs	src/util/ivec2s.h	/^glms_ivec2_subs(ivec2s a, int s) {$/;"	f	typeref:typename:CGLM_INLINE ivec2s
glms_ivec2_unpack	src/util/ivec2s.h	/^glms_ivec2_unpack(ivec2 dst[], ivec2s src[], size_t len) {$/;"	f	typeref:typename:CGLM_INLINE void
glms_ivec2_zero	src/util/ivec2s.h	/^glms_ivec2_zero(void) {$/;"	f	typeref:typename:CGLM_INLINE ivec2s
glms_ivec3_add	src/util/ivec3s.h	/^glms_ivec3_add(ivec3s a, ivec3s b) {$/;"	f	typeref:typename:CGLM_INLINE ivec3s
glms_ivec3_adds	src/util/ivec3s.h	/^glms_ivec3_adds(ivec3s a, int s) {$/;"	f	typeref:typename:CGLM_INLINE ivec3s
glms_ivec3_mul	src/util/ivec3s.h	/^glms_ivec3_mul(ivec3s a, ivec3s b) {$/;"	f	typeref:typename:CGLM_INLINE ivec3s
glms_ivec3_one	src/util/ivec3s.h	/^glms_ivec3_one(void) {$/;"	f	typeref:typename:CGLM_INLINE ivec3s
glms_ivec3_pack	src/util/ivec3s.h	/^glms_ivec3_pack(ivec3s dst[], ivec3 src[], size_t len) {$/;"	f	typeref:typename:CGLM_INLINE void
glms_ivec3_scale	src/util/ivec3s.h	/^glms_ivec3_scale(ivec3s v, int s) {$/;"	f	typeref:typename:CGLM_INLINE ivec3s
glms_ivec3_sub	src/util/ivec3s.h	/^glms_ivec3_sub(ivec3s a, ivec3s b) {$/;"	f	typeref:typename:CGLM_INLINE ivec3s
glms_ivec3_subs	src/util/ivec3s.h	/^glms_ivec3_subs(ivec3s a, int s) {$/;"	f	typeref:typename:CGLM_INLINE ivec3s
glms_ivec3_unpack	src/util/ivec3s.h	/^glms_ivec3_unpack(ivec3 dst[], ivec3s src[], size_t len) {$/;"	f	typeref:typename:CGLM_INLINE void
glms_ivec3_zero	src/util/ivec3s.h	/^glms_ivec3_zero(void) {$/;"	f	typeref:typename:CGLM_INLINE ivec3s
group	.vscode/tasks.json	/^            "group": {$/;"	o	object:tasks.0
handle	src/gfx/shader.h	/^    GLuint handle, vs_handle, fs_handle;$/;"	m	struct:Shader	typeref:typename:GLuint
handle	src/gfx/texture.h	/^    GLuint handle;$/;"	m	struct:Texture	typeref:typename:GLuint
handle	src/gfx/vao.h	/^    GLuint handle;$/;"	m	struct:VAO	typeref:typename:GLuint
handle	src/gfx/vbo.h	/^    GLuint handle;$/;"	m	struct:VBO	typeref:typename:GLuint
handle	src/gfx/window.h	/^    GLFWwindow *handle;$/;"	m	struct:Window	typeref:typename:GLFWwindow *
i16	src/defines.h	/^typedef int16_t i16;$/;"	t	typeref:typename:int16_t
i32	src/defines.h	/^typedef int32_t i32;$/;"	t	typeref:typename:int32_t
i64	src/defines.h	/^typedef int64_t i64;$/;"	t	typeref:typename:int64_t
i8	src/defines.h	/^typedef int8_t i8;$/;"	t	typeref:typename:int8_t
ibo	src/gfx/renderer.h	/^    VBO vbo, ibo;$/;"	m	struct:Renderer	typeref:typename:VBO
index	src/gfx/shader.h	/^    GLuint index;$/;"	m	struct:VertexAttr	typeref:typename:GLuint
init	src/gfx/window.h	/^    FWindow init, destroy, tick, update, render;$/;"	m	struct:Window	typeref:typename:FWindow
init	src/main.c	/^void init() {$/;"	f	typeref:typename:void
isDefault	.vscode/tasks.json	/^                "isDefault": true$/;"	b	object:tasks.0.group
ivec2	src/util/ivec2.h	/^typedef int ivec2[2];$/;"	t	typeref:typename:int[2]
keyboard	src/gfx/window.h	/^    Keyboard keyboard;$/;"	m	struct:Window	typeref:typename:Keyboard
keys	src/gfx/window.h	/^    Button keys[GLFW_KEY_LAST];$/;"	m	struct:Keyboard	typeref:typename:Button[]
kind	.vscode/tasks.json	/^                "kind": "build",$/;"	s	object:tasks.0.group
lab2rgb	src/util/color.c	/^vec3s lab2rgb(vec3s c) {$/;"	f	typeref:typename:vec3s
lab2xyz	src/util/color.c	/^vec3s lab2xyz(vec3s c) {$/;"	f	typeref:typename:vec3s
label	.vscode/tasks.json	/^            "label": "C\/C++: clang build active file",$/;"	s	object:tasks.0
last	src/gfx/window.h	/^    bool down, last, last_tick, pressed, pressed_tick;$/;"	m	struct:Button	typeref:typename:bool
last_frame	src/gfx/window.h	/^    u64 frames, fps, last_frame, frame_delta;$/;"	m	struct:Window	typeref:typename:u64
last_second	src/gfx/window.h	/^    u64 last_second;$/;"	m	struct:Window	typeref:typename:u64
last_tick	src/gfx/window.h	/^    bool down, last, last_tick, pressed, pressed_tick;$/;"	m	struct:Button	typeref:typename:bool
lerpf	src/util/fmath.h	/^#define lerpf(/;"	d
m	src/util/ivec2.h	/^#define m /;"	d
main	src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
max	src/util/camera.h	/^    vec2s position, min, max;$/;"	m	struct:OrthoCamera	typeref:typename:vec2s
max	src/util/fmath.h	/^#define max(/;"	d
min	src/util/camera.h	/^    vec2s position, min, max;$/;"	m	struct:OrthoCamera	typeref:typename:vec2s
min	src/util/fmath.h	/^#define min(/;"	d
mouse	src/gfx/window.h	/^    Mouse mouse;$/;"	m	struct:Window	typeref:typename:Mouse
mouse_get_grabbed	src/gfx/window.c	/^bool mouse_get_grabbed() {$/;"	f	typeref:typename:bool
mouse_set_grabbed	src/gfx/window.c	/^void mouse_set_grabbed(bool grabbed) {$/;"	f	typeref:typename:void
name	src/gfx/shader.h	/^    const GLchar *name;$/;"	m	struct:VertexAttr	typeref:typename:const GLchar *
options	.vscode/tasks.json	/^            "options": {$/;"	o	object:tasks.0
ortho_camera	src/gfx/renderer.h	/^    OrthoCamera ortho_camera;$/;"	m	struct:Renderer	typeref:typename:OrthoCamera
ortho_camera_init	src/util/camera.c	/^void ortho_camera_init(struct OrthoCamera *self, vec2s min, vec2s max) {$/;"	f	typeref:typename:void
ortho_camera_update	src/util/camera.c	/^void ortho_camera_update(struct OrthoCamera *self) {$/;"	f	typeref:typename:void
perspective_camera	src/gfx/renderer.h	/^    PerspectiveCamera perspective_camera;$/;"	m	struct:Renderer	typeref:typename:PerspectiveCamera
perspective_camera_init	src/util/camera.c	/^void perspective_camera_init(struct PerspectiveCamera *self, f32 fov) {$/;"	f	typeref:typename:void
perspective_camera_update	src/util/camera.c	/^void perspective_camera_update(struct PerspectiveCamera *self) {$/;"	f	typeref:typename:void
pitch	src/util/camera.h	/^    f32 pitch, yaw, fov, aspect, znear, zfar;$/;"	m	struct:PerspectiveCamera	typeref:typename:f32
position	src/gfx/window.h	/^    vec2s position, delta;$/;"	m	struct:Mouse	typeref:typename:vec2s
position	src/util/camera.h	/^    vec2s position, min, max;$/;"	m	struct:OrthoCamera	typeref:typename:vec2s
position	src/util/camera.h	/^    vec3s position, direction, up, right;$/;"	m	struct:PerspectiveCamera	typeref:typename:vec3s
pressed	src/gfx/window.h	/^    bool down, last, last_tick, pressed, pressed_tick;$/;"	m	struct:Button	typeref:typename:bool
pressed_tick	src/gfx/window.h	/^    bool down, last, last_tick, pressed, pressed_tick;$/;"	m	struct:Button	typeref:typename:bool
problemMatcher	.vscode/tasks.json	/^            "problemMatcher": [$/;"	a	object:tasks.0
proj	src/util/camera.h	/^    mat4s view, proj;$/;"	m	struct:ViewProj	typeref:typename:mat4s
radians	src/util/fmath.h	/^#define radians(/;"	d
render	src/gfx/window.h	/^    FWindow init, destroy, tick, update, render;$/;"	m	struct:Window	typeref:typename:FWindow
render	src/main.c	/^void render() {$/;"	f	typeref:typename:void
renderer	src/state.h	/^	Renderer renderer;$/;"	m	struct:State	typeref:typename:Renderer
renderer_aabb	src/gfx/renderer.c	/^void renderer_aabb($/;"	f	typeref:typename:void
renderer_destroy	src/gfx/renderer.c	/^void renderer_destroy(Renderer *self) {$/;"	f	typeref:typename:void
renderer_init	src/gfx/renderer.c	/^void renderer_init(Renderer *self) {$/;"	f	typeref:typename:void
renderer_pop_camera	src/gfx/renderer.c	/^void renderer_pop_camera(Renderer *self) {$/;"	f	typeref:typename:void
renderer_prepare	src/gfx/renderer.c	/^void renderer_prepare(Renderer *self, enum RenderPass pass) {$/;"	f	typeref:typename:void
renderer_push_camera	src/gfx/renderer.c	/^void renderer_push_camera(Renderer *self) {$/;"	f	typeref:typename:void
renderer_quad_color	src/gfx/renderer.c	/^void renderer_quad_color($/;"	f	typeref:typename:void
renderer_quad_texture	src/gfx/renderer.c	/^void renderer_quad_texture($/;"	f	typeref:typename:void
renderer_set_camera	src/gfx/renderer.c	/^void renderer_set_camera(Renderer *self, enum CameraType type) {$/;"	f	typeref:typename:void
renderer_set_view_proj	src/gfx/renderer.c	/^void renderer_set_view_proj(Renderer *self) {$/;"	f	typeref:typename:void
renderer_update	src/gfx/renderer.c	/^void renderer_update(Renderer *self) {$/;"	f	typeref:typename:void
renderer_use_shader	src/gfx/renderer.c	/^void renderer_use_shader(Renderer *self, enum ShaderType shader) {$/;"	f	typeref:typename:void
rgb2lab	src/util/color.c	/^vec3s rgb2lab(vec3s c) {$/;"	f	typeref:typename:vec3s
rgb2xyz	src/util/color.c	/^vec3s rgb2xyz(vec3s c) {$/;"	f	typeref:typename:vec3s
rgb_brighten	src/util/color.c	/^vec3s rgb_brighten(vec3s rgb, f32 d) {$/;"	f	typeref:typename:vec3s
rgba_brighten	src/util/color.c	/^vec4s rgba_brighten(vec4s rgba, f32 d) {$/;"	f	typeref:typename:vec4s
rgba_lerp	src/util/color.c	/^vec4s rgba_lerp(vec4s rgba_a, vec4s rgba_b, f32 t) {$/;"	f	typeref:typename:vec4s
rgba_lerp3	src/util/color.c	/^vec4s rgba_lerp3(vec4s rgba_a, vec4s rgba_b, vec4s rgba_c, f32 t) {$/;"	f	typeref:typename:vec4s
right	src/util/camera.h	/^    vec3s position, direction, up, right;$/;"	m	struct:PerspectiveCamera	typeref:typename:vec3s
run	Makefile	/^run: all$/;"	t
safe_expf	src/util/fmath.h	/^#define safe_expf(/;"	d
shader	src/gfx/renderer.h	/^    Shader shader;$/;"	m	struct:Renderer	typeref:typename:Shader
shader_bind	src/gfx/shader.c	/^void shader_bind(Shader self) {$/;"	f	typeref:typename:void
shader_create	src/gfx/shader.c	/^Shader shader_create(char *vs_path, char *fs_path, size_t n, VertexAttr attributes[]) {$/;"	f	typeref:typename:Shader
shader_destroy	src/gfx/shader.c	/^void shader_destroy(Shader self) {$/;"	f	typeref:typename:void
shader_uniform_float	src/gfx/shader.c	/^void shader_uniform_float(Shader self, char *name, f32 f) {$/;"	f	typeref:typename:void
shader_uniform_int	src/gfx/shader.c	/^void shader_uniform_int(Shader self, char *name, int v) {$/;"	f	typeref:typename:void
shader_uniform_mat4	src/gfx/shader.c	/^void shader_uniform_mat4(Shader self, char *name, mat4s m) {$/;"	f	typeref:typename:void
shader_uniform_texture2D	src/gfx/shader.c	/^void shader_uniform_texture2D(Shader self, char *name, Texture texture, GLuint n) {$/;"	f	typeref:typename:void
shader_uniform_uint	src/gfx/shader.c	/^void shader_uniform_uint(Shader self, char *name, unsigned int v) {$/;"	f	typeref:typename:void
shader_uniform_vec2	src/gfx/shader.c	/^void shader_uniform_vec2(Shader self, char *name, vec2s v) {$/;"	f	typeref:typename:void
shader_uniform_vec3	src/gfx/shader.c	/^void shader_uniform_vec3(Shader self, char *name, vec3s v) {$/;"	f	typeref:typename:void
shader_uniform_vec4	src/gfx/shader.c	/^void shader_uniform_vec4(Shader self, char *name, vec4s v) {$/;"	f	typeref:typename:void
shader_uniform_view_proj	src/gfx/shader.c	/^void shader_uniform_view_proj(Shader self, ViewProj view_proj) {$/;"	f	typeref:typename:void
shaders	src/gfx/renderer.h	/^    Shader shaders[ShaderType_MAX];$/;"	m	struct:Renderer	typeref:typename:Shader[]
sign	src/util/fmath.h	/^#define sign(/;"	d
sinf	src/util/fmath.h	/^#define sinf(/;"	d
size	src/gfx/renderer.h	/^        size_t size;$/;"	m	struct:Renderer::__anon9acfc83d0108	typeref:typename:size_t
size	src/gfx/texture.h	/^    ivec2s size;$/;"	m	struct:Texture	typeref:typename:ivec2s
size	src/gfx/window.h	/^    ivec2s size;$/;"	m	struct:Window	typeref:typename:ivec2s
state	src/main.c	/^State state;$/;"	v	typeref:typename:State
tasks	.vscode/tasks.json	/^    "tasks": [$/;"	a
texture_bind	src/gfx/texture.c	/^void texture_bind(Texture self) {$/;"	f	typeref:typename:void
texture_create_from_path	src/gfx/texture.c	/^Texture texture_create_from_path(char *path) {$/;"	f	typeref:typename:Texture
texture_create_from_pixels	src/gfx/texture.c	/^Texture texture_create_from_pixels(u8 *pixels, size_t width, size_t height) {$/;"	f	typeref:typename:Texture
texture_destroy	src/gfx/texture.c	/^void texture_destroy(Texture self) {$/;"	f	typeref:typename:void
texture_load_pixels	src/gfx/texture.c	/^void texture_load_pixels(char *path, u8 **pixels_out, size_t *width_out, size_t *height_out) {$/;"	f	typeref:typename:void
textures	src/gfx/renderer.h	/^    Texture textures[Texture_MAX];$/;"	m	struct:Renderer	typeref:typename:Texture[]
tick	src/gfx/window.h	/^    FWindow init, destroy, tick, update, render;$/;"	m	struct:Window	typeref:typename:FWindow
tick	src/main.c	/^void tick() { state.ticks++; }$/;"	f	typeref:typename:void
tick_remainder	src/gfx/window.h	/^    u64 ticks, tps, tick_remainder;$/;"	m	struct:Window	typeref:typename:u64
ticks	src/gfx/window.h	/^    u64 ticks, tps, tick_remainder;$/;"	m	struct:Window	typeref:typename:u64
ticks	src/state.h	/^	u64 ticks;$/;"	m	struct:State	typeref:typename:u64
tps	src/gfx/window.h	/^    u64 ticks, tps, tick_remainder;$/;"	m	struct:Window	typeref:typename:u64
type	.vscode/tasks.json	/^            "type": "cppbuild",$/;"	s	object:tasks.0
type	src/gfx/vbo.h	/^    GLint type;$/;"	m	struct:VBO	typeref:typename:GLint
u16	src/defines.h	/^typedef uint16_t u16;$/;"	t	typeref:typename:uint16_t
u32	src/defines.h	/^typedef uint32_t u32;$/;"	t	typeref:typename:uint32_t
u64	src/defines.h	/^typedef uint64_t u64;$/;"	t	typeref:typename:uint64_t
u8	src/defines.h	/^typedef uint8_t u8;$/;"	t	typeref:typename:uint8_t
up	src/util/camera.h	/^    vec3s position, direction, up, right;$/;"	m	struct:PerspectiveCamera	typeref:typename:vec3s
update	src/gfx/window.h	/^    FWindow init, destroy, tick, update, render;$/;"	m	struct:Window	typeref:typename:FWindow
update	src/main.c	/^void update() {$/;"	f	typeref:typename:void
uv_unit	src/gfx/texture.h	/^    vec2s uv_unit;$/;"	m	struct:Texture	typeref:typename:vec2s
vao	src/gfx/renderer.h	/^    VAO vao;$/;"	m	struct:Renderer	typeref:typename:VAO
vao_attr	src/gfx/vao.c	/^void vao_attr($/;"	f	typeref:typename:void
vao_bind	src/gfx/vao.c	/^void vao_bind(VAO self) {$/;"	f	typeref:typename:void
vao_create	src/gfx/vao.c	/^VAO vao_create() {$/;"	f	typeref:typename:VAO
vao_destroy	src/gfx/vao.c	/^void vao_destroy(VAO self) {$/;"	f	typeref:typename:void
vbo	src/gfx/renderer.h	/^    VBO vbo, ibo;$/;"	m	struct:Renderer	typeref:typename:VBO
vbo_bind	src/gfx/vbo.c	/^void vbo_bind(VBO self) {$/;"	f	typeref:typename:void
vbo_buffer	src/gfx/vbo.c	/^void vbo_buffer(VBO self, void *data, size_t offset, size_t count) {$/;"	f	typeref:typename:void
vbo_create	src/gfx/vbo.c	/^VBO vbo_create(GLint type, bool dynamic) {$/;"	f	typeref:typename:VBO
vbo_destroy	src/gfx/vbo.c	/^void vbo_destroy(VBO self) {$/;"	f	typeref:typename:void
version	.vscode/tasks.json	/^    "version": "2.0.0"$/;"	s
view	src/util/camera.h	/^    mat4s view, proj;$/;"	m	struct:ViewProj	typeref:typename:mat4s
view_proj	src/util/camera.h	/^    ViewProj view_proj;$/;"	m	struct:PerspectiveCamera	typeref:typename:ViewProj
view_proj	src/util/camera.h	/^    struct ViewProj view_proj;$/;"	m	struct:OrthoCamera	typeref:struct:ViewProj
vs_handle	src/gfx/shader.h	/^    GLuint handle, vs_handle, fs_handle;$/;"	m	struct:Shader	typeref:typename:GLuint
window	src/gfx/window.c	/^Window window;$/;"	v	typeref:typename:Window
window	src/state.h	/^	Window *window;$/;"	m	struct:State	typeref:typename:Window *
window_create	src/gfx/window.c	/^void window_create(FWindow init, FWindow destroy, FWindow tick, FWindow update,$/;"	f	typeref:typename:void
window_loop	src/gfx/window.c	/^void window_loop() {$/;"	f	typeref:typename:void
wireframe	src/gfx/renderer.h	/^        bool wireframe : 1;$/;"	m	struct:Renderer::__anon9acfc83d0208	typeref:typename:bool:1
xyz2lab	src/util/color.c	/^vec3s xyz2lab(vec3s c) {$/;"	f	typeref:typename:vec3s
xyz2rgb	src/util/color.c	/^vec3s xyz2rgb(vec3s c) {$/;"	f	typeref:typename:vec3s
yaw	src/util/camera.h	/^    f32 pitch, yaw, fov, aspect, znear, zfar;$/;"	m	struct:PerspectiveCamera	typeref:typename:f32
zfar	src/util/camera.h	/^    f32 pitch, yaw, fov, aspect, znear, zfar;$/;"	m	struct:PerspectiveCamera	typeref:typename:f32
znear	src/util/camera.h	/^    f32 pitch, yaw, fov, aspect, znear, zfar;$/;"	m	struct:PerspectiveCamera	typeref:typename:f32
